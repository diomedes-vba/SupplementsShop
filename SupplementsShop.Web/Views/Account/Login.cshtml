@model LoginViewModel

@{
    var returnUrl = ViewData["ReturnUrl"] as string;
}

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-lg p-4 rounded" style="width: 400px;">
        <h2 class="text-center mb-4">Login</h2>
        
        <form asp-action="Login" method="post">
            <input type="hidden" name="returnUrl" value="@returnUrl" />
            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <input asp-for="Email" class="form-control" placeholder="Enter your email"/>
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Password" class="form-label"></label>
                <input asp-for="Password" class="form-control" type="password" placeholder="Enter your password"/>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="mb-3 form-check">
                <input asp-for="RememberMe" class="form-check-input"/>
                <label asp-for="RememberMe" class="form-check-label"></label>
            </div>

            <button type="submit" class="btn btn-primary w-100">Login</button>

            <div class="mt-3 text-center">
                <a href="#">Forgot password?</a>
            </div>

            <div class="mt-3 text-center">
                Don't have an account? <a asp-action="Register">Register here</a>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger mt-2">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
        </form>
    </div>
</div>
